# Compile this form with FFC: ffc -l dolfin Necro.ufl

def Sl(phl_n):
        cond=conditional(lt((2/pi)*atan(phl_n/(a_)),1e-3),1.0,1-(2/pi)*atan(phl_n/(a_)))
        return cond

def St(pth_n):
        cond=conditional(lt((2/pi)*atan( (sig_hl/sig_th)*(pth_n/(a_)) ) ,1e-3),0.0, (2/pi)*atan( (sig_hl/sig_th)*(pth_n/(a_)) ) )
        return cond

def Sh(phl_n,pth_n):
        cond=conditional(lt(1 - Sl(phl_n) - St(pth_n),1e-3),0.0,1 - Sl(phl_n) - St(pth_n))
        return cond

def k_rt(pth_n):
	cond=conditional(lt(pow(St(pth_n),1),1e-3),1e-3,pow(St(pth_n),1))
	return cond

# Define TC growth
def M_l_t_OX(pl_n,phl_n,pth_n,wnl_n):
        #H1 oxygen dependency
        cond = conditional(lt(w_crit0,wnl_n),1.0 ,0.0)
        cond2 = conditional(lt(wnl_n,w_env),0.5-0.5*cos(pi*( (wnl_n-w_crit0)/(w_env-w_crit0) ) ),1.0)
        #cond2 = conditional(lt(wnl_n,w_env),(wnl_n-w_crit0)/(w_env-w_crit0),1.0)
        #Hp pressure dependency
        cond3 = conditional(lt(p1,phl_n+pth_n+pl_n),1.0,0.0)
        cond4 = conditional(lt(phl_n+pth_n+pl_n,(p_crit)),pow(( abs(phl_n+pth_n+pl_n-p1)  / (p_crit-p1)),0.5),1.0)
        #cond4 = conditional(lt(phl_n+pth_n+pl_n,p_crit),(phl_n+pth_n+pl_n-p1)/(p_crit-p1),1.0)
        return cond*cond2*(1-cond3*cond4)*St(pth_n)*(1-Sh(phl_n,pth_n))*t_poro

def M_l_t_ANOX(pl_n,phl_n,pth_n,wnl_n):
		# growth term after phenotype switch: lipid metabolism
        cond3 = conditional(lt((p1),phl_n+pth_n+pl_n),1.0,0.0)
        cond4 = conditional(lt(phl_n+pth_n+pl_n,(p_crit)),pow(( abs(phl_n+pth_n+pl_n-p1)  / (p_crit-p1)),0.5),1.0)
        return (1-cond3*cond4)*St(pth_n)*t_poro

def M_t_s(pl_n,phl_n,pth_n,wnl_n):
        return gam_ts0*M_l_t_OX(pl_n,phl_n,pth_n,wnl_n)

# Define TC necrosis
def rate_necro(wnecro,wnl_n):
	cond = conditional(lt(wnl_n,w_crit0),0.5-0.5*cos( pi*(wnl_n/w_crit0) ),1.0)
	return gam_tn*(1-cond)*(1-wnecro)

#ECM remodeling
def remodel(e_permea,t_wrho):
	return k_max*t_wrho - e_permea*t_wrho + e_permea


cell = tetrahedron
P1 = FiniteElement("Lagrange", cell, 1)
P2 = VectorElement("Lagrange", cell, 1)
L4 = MixedElement(P1,P1,P1,P1)


dx = Measure('dx')
dx = dx(metadata={'quadrature_degree': 4})

wnecro=TrialFunction(P1)
wn=TestFunction(P1)
w0 = Coefficient(L4) #previous solution
pl_n, phl_n, pth_n, wnl_n = split(w0)


wnecro_n = Coefficient(P1)
t_poro=Coefficient(P1)
t_wrho=Coefficient(P1)
e_permea = Coefficient(P1)

gam_tn=Constant(cell)
mu_t0 = Constant(cell)
gam_tg0=Constant(cell)
w_crit0=Constant(cell)
w_env=Constant(cell)
p1=Constant(cell)
p_crit=Constant(cell)
sig_hl = Constant(cell)
sig_th = Constant(cell)
a_=Constant(cell)
dT=Constant(cell)
rho_s=Constant(cell)
rho_t=Constant(cell)
gam_ts0=Constant(cell)
gam_rho_mut=Constant(cell)
gam_rho_tg=Constant(cell)
k_max=Constant(cell)


#################### Weak form

F= t_poro*St(pth_n)*(1/dT)*(wnecro-wnecro_n)*wn*dx\
- t_poro*St(pth_n)*( (1/rho_t)*rate_necro(wnecro,wnl_n) \
- wnecro*( (1/rho_t)*(1-wnecro_n)*gam_tg0*M_l_t_OX(pl_n,phl_n,pth_n,wnl_n)\
+ (1/rho_t)*t_wrho*gam_rho_tg*(1-wnecro_n)*gam_tg0*M_l_t_ANOX(pl_n,phl_n,pth_n,wnl_n)\
- (1/rho_t)*(1-t_wrho)*(1-wnecro_n)*gam_tg0*M_t_s(pl_n,phl_n,pth_n,wnl_n)\
+ (1/rho_s)*St(pth_n)*(1-t_wrho)*(1-wnecro_n)*gam_tg0*M_t_s(pl_n,phl_n,pth_n,wnl_n) ) )*wn*dx\
- k_rt(pth_n)*(remodel(e_permea,t_wrho)/((-gam_rho_mut*t_wrho + 1)*mu_t0))*dot(grad(pth_n+phl_n+pl_n),grad(wnecro))*wn*dx 


a, L = lhs(F), rhs(F)



